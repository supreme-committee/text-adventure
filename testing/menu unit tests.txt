The menu class creates the menu seen on screen. The menu is supposed to take up the the top 22 pixels of the screen and span the entire width of the screen when it is displayed. It has functions to render it on the screen, enable or disable certain options on the bar, and return whether or not the user has clicked on certain parts of the menu.

Function: menu
Description: Constructor for class. Takes in an SFML font object to initialize text objects. Also initializes other drawing objects for the menu.

EC1: Constructor is passed a valid font object.
EC2: Constructor is passed an invalid font object.

Test Cases:
1. Constructor is passed an SFML font object that has been properly loaded from a file.
   Expected Output: Text objects in menu are properly initialized and can be rendered.
   Covered: EC1
2. Constructor is passed an SFML font object that has not been properly loaded from a file(either not loaded at all or loaded an invalid file)
   Expected Output: Text objects are not initialized and can not be rendered properly.
   Covered: EC2


Function: Render
Description: Paints all of the elements of the menu on the given window.

EC1: Window object passed in has correct dimensions(1024 X 576)
EC2: Window object passed in is too small width-wise(<1024).
EC3: Window object passed in is too large width-wise(>1024).
EC4: Window object passed in is less than 22 pixels high.

Test Cases:
1. Window passed in is 1024 X 576
   Expected Output: Menu is properly rendered in the window.
   Covers: EC1
2. Window passed in is 800 X 600
   Expected Output: The Menu's right side is cut off of the window
   Covers: EC2
3. Window passed in is 1920 X 1080
   Expected Output: The Menu does not cover the entire width of the window.
   Covers: EC3
4. Window passed in is 1024 X 10
   Expected Output: The menu's bottom half is cut off by the window.
   Covers: EC4


Function: isMouseOver
Description: Takes two integer arugments that correspond to the x and y coordinates of the mouse and returns true or false depending on if those coordinates are contained in the menu bar's area(1024 X 22).

EC1: Both X and Y coordinates passed in are contained in the menu bar's area.
EC2: X coordinate is in the menu bar's area but the Y coordinate is not.
EC3: X coordinate is not in the menu bar's area but the Y coordinate is.
EC4: Both X and Y coordinates are not in the menu bar's area.

Test Cases:
1. X = 500,  Y = 10
   Expected Output: true
   Covered: EC1
2. X = 500, y = 500
   Expected Output: false
   Covered: EC2
3. X = -10 Y = 10
   Expected Output: false
   Covered: EC3
4. X = -10, Y = -10
   Expected Output: false
   Covered: EC4


Function: loadSelect
Description: Takes two integer arugments that correspond to the X and Y coordinates of the mouse and returns true or false if the coordinates are contained in the rectangular area of the load button. The load button area is a rectangle that is 45 X 22 starting at (160,0).

EC1: Both X and Y are contained in the load rectangle.
EC2: X is contained but Y is not.
EC3: X is not contained but Y is.
EC4: Both X and Y are not contained.

Test Cases:
1. X = 170, Y = 2
   Expected Output: true
   Covered: EC1
2. X = 170, Y = 50
   Expected Output: false
   Covered: EC2
3. X = -10, Y = 20
   Expected Output: false
   Covered: EC3
4. X = -10, Y = -10
   Expected Output: false
   Covered: EC4


Function: saveSelect
Description: Takes two integer arugments that correspond to the X and Y coordinates of the mouse and returns true or false depending on if the coordinates are contained in the rectangular area of the save button. The save button is a rectangle that is 45 X 22 starting at (100,0).

EC1: Both X and Y are are contained in the save rectangle.
EC2: X is contained but Y is not.
EC3: X is not contained but Y is.
EC4: Neither X or Y are contained.

Test Cases:
1. X = 101, Y = 1
   Expected Output: true
   Covered: EC1
2. X = 101, Y = 200
   Expected Output: false
   Covered: EC2
3. X = 80, Y = 1
   Expected Output: false
   Covered: EC3
4. X = -1, Y = -1
   Expected Output: false
   Covered: EC4


Function: newSelect
Description: Takes two integer arugments that correspond to the X and Y coordinates of the mouse and returns true or false depending on if the coordinates are contained in the rectangular area of the new game button. The new game button is a rectangle that is 95 X 22 starting at (0,0).

EC1: Both X and Y are are contained in the new game rectangle.
EC2: X is contained but Y is not.
EC3: X is not contained but Y is.
EC4: Neither X or Y are contained.

Test Cases:
1. X = 1, Y = 1
   Expected Output: true
   Covered: EC1
2. X = 1, Y = 200
   Expected Output: false
   Covered: EC2
3. X = 80, Y = 1
   Expected Output: false
   Covered: EC3
4. X = -1, Y = -1
   Expected Output: false
   Covered: EC4



Function: muteSelect
Description: Takes two integer arugments that correspond to the X and Y coordinates of the mouse and returns true or false depending on if the coordinates are contained in the rectangular area of the mute button. The mute button is a rectangle that is 45 X 22 starting at (220,0).

EC1: Both X and Y are are contained in the save rectangle.
EC2: X is contained but Y is not.
EC3: X is not contained but Y is.
EC4: Neither X or Y are contained.

Test Cases:
1. X = 221, Y = 1
   Expected Output: true
   Covered: EC1
2. X = 221, Y = 200
   Expected Output: false
   Covered: EC2
3. X = 80, Y = 1
   Expected Output: false
   Covered: EC3
4. X = -1, Y = -1
   Expected Output: false
   Covered: EC4


Function: setTextColor
Description: Takes three arguments: two integers that correspond to the X and Y coordinate of the mouse, and a boolean, called mute, is used to tell if sound is muted or not. Using those three arguments, the text color of all of the buttons are changed accordingly.

EC1: X and Y are contained in the new game button.
EC2: X and Y are contained in the load game button, and the load button is enabled.
EC3: X and Y are contained in the load game button, and the load button is enabled. 
EC4: X and Y are contained in the save game button, and the save button is enabled.
EC5: X and Y are contained in the save game button, and the save button is enabled.
EC6: X and Y are contained in the mute button, and the mute boolean is false.
EC7: X and Y are contained in the mute button, and the mute boolean is true.
EC8: X and Y are not contained in the mute button, and the mute boolean is true.
EC9: X and Y are not contained in the mute button and the mute boolean is false.
EC10: X and Y are not contained in any button.

Test Cases:
1. X = 1, Y = 1
   Expected Output: All button text is black except for the new game button text, which is red.
   Covered: EC1
2. X = 170, Y = 1, load button is disabled
   Expected Output: All button text is black except for the load button text, which is a slightly more transparent black.
   Covered: EC2
3. X = 170, Y = 1, load button is enabled
   Expected Output: All button text is black except for the load button text, which is red.
   Covered: EC3
4. X = 101, Y = 1, save button is disabled
   Expected Output: All button text is black except for the save button text, which is a slightly more transparent black.
   Covered: EC4
5. X = 101, Y = 1, save button is enabled
   Expected Output: All button text is black except for the save button text, which is red.
   Covered: EC5
6. X = 221, Y = 1, mute = false
   Expected Output: All button text is black, except for the mute button text, which is red.
   Covered: EC6
7. X = 221, Y = 1, mute = true
   Expected Output: All button text is black, except for the mute button text, which is cyan.
   Covered: EC7
8. X = -1, Y = -1, mute = true
   Expected Output: All button text is black, except for the mute button text, which is blue.
   Covered: EC8
9. X = -1, Y = -1, mute = false
   Expected Output: All button text is black.
   Covered: EC9, EC 10


Function: enableSaving
Description: Takes one boolean arugment, enable, that will either enable or disable the save game button.

EC1: Boolean passed in is true.
EC2: Boolean passed in is false.

Test Cases:
1. enable = true
   Expected Output: The save button will stay or become inactive, will no longer be able to be clicked, and the button text will gray out.
   Covered: EC1
2. enable = false
   Expected Output: The save button will stay or become active and be able to be clicked, and the button text will be black.
   Covered: EC2


Function: enableLoading
Description: Takes one boolean arugment, enable, that will either enable or disable the load game button.

EC1: Boolean passed in is true.
EC2: Boolean passed in is false.

Test Cases:
1. enable = true
   Expected Output: The load game button will stay or become inactive, will no longer be clickable, and the button text will gray out.
   Covered: EC1
2. enable = false
   Expected Output: The load game button will stay or become active, be able to be clicked, and the button text will be black.
   Covered: EC2